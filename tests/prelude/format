(mu:type-of prelude:format)	:func
(prelude:format :t "prelude:format" ())	prelude:format:nil
(prelude:format () "prelude:format" ())	"prelude:format"
(prelude:stringp (prelude:format () "prelude:format" ()))	:t
(prelude:format :t "prelude:format unqualified ~A symbol arg" '(f-symbol))	prelude:format unqualified f-symbol symbol arg:nil
(prelude:format :t "prelude:format unqualified ~S symbol arg" '(f-symbol))	prelude:format unqualified f-symbol symbol arg:nil
(prelude:format :t "prelude:format qualified ~A symbol arg" '(mu:fx-add))	prelude:format qualified fx-add symbol arg:nil
(prelude:format :t "prelude:format qualified ~S symbol arg" '(mu:fx-add))	prelude:format qualified mu:fx-add symbol arg:nil
(prelude:format :t "prelude:format ~A string arg" '("f-string"))	prelude:format f-string string arg:nil
(prelude:format :t "prelude:format ~S string arg" '("f-string"))	prelude:format "f-string" string arg:nil
(prelude:format :t "prelude:format ~A fixnum arg" '(1))	prelude:format 1 fixnum arg:nil
(prelude:format :t "prelude:format ~S fixnum arg" '(1))	prelude:format 1 fixnum arg:nil
(prelude:format :t "prelude:format ~X fixnum arg" '(#xabcd))	prelude:format abcd fixnum arg:nil
(prelude:format :t "prelude:format ~X fixnum arg" '(-14))	prelude:format -e fixnum arg:nil
(prelude:format :t "prelude:format ~D fixnum arg" '(#xabc))	prelude:format 2748 fixnum arg:nil
