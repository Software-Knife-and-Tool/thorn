(mu:type-of prelude:read)	:func
(mu:sy-name (prelude:read (prelude:make-string-stream :input "a") () ()))	"a"
(mu:sy-name (prelude:read (prelude:make-string-stream :input "prelude:a") () ()))	"a"
(mu:sy-ns (prelude:read (prelude:make-string-stream :input "a") () ()))	:nil
(mu:sy-ns (prelude:read (prelude:make-string-stream :input "prelude:a") () ()))	:prelude
(prelude:read (prelude:make-string-stream :input "a") () ())	a
(prelude:read (prelude:make-string-stream :input "prelude:a") () ())	prelude:a
(prelude:read (prelude:make-string-stream :input "abcdefgh") () ())	abcdefgh
(prelude:read (prelude:make-string-stream :input "prelude:abcdefgh") () ())	prelude:abcdefgh
(prelude:read (prelude:make-string-stream :input "0") () ())	0
(prelude:read (prelude:make-string-stream :input "+0") () ())	0
(prelude:read (prelude:make-string-stream :input "-0") () ())	0
(prelude:read (prelude:make-string-stream :input "1024") () ())	1024
(prelude:read (prelude:make-string-stream :input "-1024") () ())	-1024
(prelude:read (prelude:make-string-stream :input "+1024") () ())	1024
(prelude:read (prelude:make-string-stream :input "1.024") () ())	1.0240
(prelude:read (prelude:make-string-stream :input "#b10101100") () ())	172
(prelude:read (prelude:make-string-stream :input "#d1024") () ())	1024
(prelude:read (prelude:make-string-stream :input "#xabc") () ())	2748
(prelude:read (prelude:make-string-stream :input "#xabcdef") () ())	11259375
(prelude:read (prelude:make-string-stream :input "()") () ())	:nil
(prelude:read (prelude:make-string-stream :input "(())") () ())	(:nil)
(prelude:read (prelude:make-string-stream :input "(() ())") () ())	(:nil :nil)
(prelude:read (prelude:make-string-stream :input "(123 ())") () ())	(123 :nil)
(prelude:read (prelude:make-string-stream :input "(() 123)") () ())	(:nil 123)
(prelude:read (prelude:make-string-stream :input "(a ())") () ())	(a :nil)
(prelude:read (prelude:make-string-stream :input "(a () )") () ())	(a :nil)
(prelude:read (prelude:make-string-stream :input "(a())") () ())	(a :nil)
(prelude:read (prelude:make-string-stream :input "(a() )") () ())	(a :nil)
(prelude:read (prelude:make-string-stream :input "(()a)") () ())	(:nil a)
(prelude:read (prelude:make-string-stream :input "(()a )") () ())	(:nil a)
(prelude:read (prelude:make-string-stream :input "(a b )") () ())	(a b)
(prelude:read (prelude:make-string-stream :input "(a b)") () ())	(a b)
(prelude:read (prelude:make-string-stream :input "(abc ())") () ())	(abc :nil)
(prelude:read (prelude:make-string-stream :input "(() abc )") () ())	(:nil abc)
(prelude:read (prelude:make-string-stream :input "(:a :b )") () ())	(:a :b)
(prelude:read (prelude:make-string-stream :input "(:a :b)") () ())	(:a :b)
(prelude:read (prelude:make-string-stream :input "(:abc ())") () ())	(:abc :nil)
(prelude:read (prelude:make-string-stream :input "(() :abc )") () ())	(:nil :abc)
(prelude:read (prelude:make-string-stream :input "(1 2)") () ())	(1 2)
(prelude:read (prelude:make-string-stream :input "(1 . 2)") () ())	(1 . 2)
(prelude:read (prelude:make-string-stream :input "(1 2 . 3)") () ())	(1 2 . 3)
(prelude:read (prelude:make-string-stream :input "((1 2) . 3)") () ())	((1 2) . 3)
(prelude:read (prelude:make-string-stream :input "((1 2) . (3 4))") () ())	((1 2) 3 4)
(prelude:read (prelude:make-string-stream :input "#\\a") () ())	#\a
(prelude:read (prelude:make-string-stream :input "#\\ ") () ())	#\space
(prelude:read (prelude:make-string-stream :input "#\\)") () ())	#\)
(prelude:read (prelude:make-string-stream :input "#(:t 1 2 3)") () ())	#(:t 1 2 3)
(prelude:read (prelude:make-string-stream :input "#(:byte 1 2 3)") () ())	#(:byte 1 2 3)
(prelude:read (prelude:make-string-stream :input "#(:fixnum 1 2 3)") () ())	#(:fixnum 1 2 3)
(prelude:read (prelude:make-string-stream :input "#(:char #\\a #\\b #\\c)") () ())	"abc"
(prelude:read (prelude:make-string-stream :input "#(:float 1.0 2.0 3.0)") () ())	#(:float 1.0000 2.0000 3.0000)
(prelude:read (prelude:make-string-stream :input "#*") () ())	#s(:<type> vector ((:base . #(:byte 0)) (:disp) (:bitvec 0)))
(prelude:read (prelude:make-string-stream :input "#*1111") () ())	#s(:<type> vector ((:base . #(:byte 240)) (:disp) (:bitvec 4)))
(prelude:read (prelude:make-string-stream :input "#*111100001111") () ())	#s(:<type> vector ((:base . #(:byte 240 240)) (:disp) (:bitvec 12)))
(prelude:read (prelude:make-string-stream :input "'prelude:a") () ())	(:quote prelude:a)
(prelude:read (prelude:make-string-stream :input "'abc") () ())	(:quote abc)
(prelude:read (prelude:make-string-stream :input "'prelude:abc") () ())	(:quote prelude:abc)
(prelude:read (prelude:make-string-stream :input "'abcdefgh") () ())	(:quote abcdefgh)
(prelude:read (prelude:make-string-stream :input "#.1") () ())	1
(prelude:read (prelude:make-string-stream :input "#.(mu:fx-add 1 2)") () ())	3
