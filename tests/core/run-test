#! /bin/bash
BASE_CORE=../src/core
EXEC=../dist/runtime
LOAD_LIST=( \
        -l $BASE_CORE/core.l            \
	-l $BASE_CORE/closures.l  	\
	-l $BASE_CORE/fixnums.l         \
	-l $BASE_CORE/read-macro.l 	\
	-l $BASE_CORE/read.l       	\
	-l $BASE_CORE/sequences.l  	\
	-l $BASE_CORE/symbol-macro.l	\
	-l $BASE_CORE/symbols.l    	\
	-l $BASE_CORE/vectors.l         \
        -l $BASE_CORE/compile.l         \
        -l $BASE_CORE/exceptions.l      \
        -l $BASE_CORE/format.l     	\
        -l $BASE_CORE/lambda.l     	\
        -l $BASE_CORE/lists.l      	\
        -l $BASE_CORE/load.l       	\
        -l $BASE_CORE/macro.l      	\
        -l $BASE_CORE/parse.l      	\
        -l $BASE_CORE/perf.l      	\
        -l $BASE_CORE/quasiquote.l 	\
        -l $BASE_CORE/streams.l    	\
        -l $BASE_CORE/strings.l    	\
        )

TMP=/var/tmp

args=("$@")
opts=("${args[@]:1}")

function assert_eq () {
    result=`$EXEC ${LOAD_LIST[@]} ${opts[@]} -p -e "$1"`

    if [ $? -eq 0 ]
    then
       if [ "$result" != "$2" ]
       then
           echo -e "$1","$2","$result",failed
       else
           echo -e "$1","$2","$result",passed
       fi
    else
        echo -e "$1",aborted
    fi
}

source "$1" > $TMP/core-test.$$.log 2>&1

total=`egrep -c -v "^#" $1`
failed=`grep -c failed $TMP/core-test.$$.log`
aborted=`grep -c aborted $TMP/core-test.$$.log`
file=`basename "$1"`

echo "core:",$file,$total,$failed,$aborted
cat $TMP/core-test.$$.log

rm -f $TMP/core-test.$$.log

exit 0
