(mu:type-of core:make-vector)	:func
(mu:type-of core:slice)	:func
(mu:type-of core:vector-length)	:func
(mu:type-of core:vector-ref)	:func
(mu:type-of core:vectorp)	:func
(core:make-vector '(1 2 3))	#(:byte 1 2 3)
(core:make-vector '(1024 2 3))	#(:fixnum 1024 2 3)
(core:make-vector '(#\a #\b #\c))	"abc"
(core:make-vector '(1.0 1.0 1.0))	#(:float 1.0000 1.0000 1.0000)
(core:make-vector '(1.0 #\a ()))	#(:t 1.0000 a :nil)
(core:core-type-p (core:make-vector '(1 2 3)))	:nil
(core:slice #(:fixnum 1 2 3) 1 2)	#s(:<ctype> vector ((:base . #(:fixnum 1 2 3)) (:start . 1) (:length . 2)))
(core:vector-length (core:make-vector '(1 2 3)))	3
(core:vector-ref (core:make-vector '(1 2 3)) 1)	2
(core:vectorp (core:make-vector '(1 2 3)))	:t
(core:vectorp (mu:make-sv :t '(1 2 3)))	:t
(core:vector-ref (core:slice #(:fixnum 1 2 3) 1 2) 0)	2
