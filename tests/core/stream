(mu:type-of core:close)	:func
(mu:type-of core:eof)	:func
(mu:type-of core:get-output-stream-string)	:func
(mu:type-of core:make-string-stream)	:func
(mu:type-of core:open)	:func
(mu:type-of core:with-open-stream)	:func
(mu:type-of core:read)	:func
(mu:type-of core:read-byte)	:func
(mu:type-of core:read-char)	:func
(mu:type-of core:terpri)	:func
(mu:type-of core:unread-char)	:func
(mu:type-of core:write)	:func
(mu:type-of core:write-byte)	:func
(mu:write 1 () mu:std-out)	11
(mu:write (mu:fx-add 1 2) () mu:std-out)	33
(mu:write (core:string= "" "") () mu:std-out)	:t:t
(mu:write (core:string= "" "1") () mu:std-out)	:nil:nil
(mu:write (core:string= "1" "1") () mu:std-out)	:t:t
(mu:write (core:string= "123" "1") () mu:std-out)	:nil:nil
(mu:write (core:string= "" "ci") () mu:std-out)	:nil:nil
(mu:write (core:string= "ci" "") () mu:std-out)	:nil:nil
(mu:write (core:with-open-stream :string :input "foo" (:lambda (stream) (core:read-char stream () ()))) () mu:std-out)	f#\f
