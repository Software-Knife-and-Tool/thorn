(core:compile '(defconst foo ()))
(core:compile '(define-core-if :t :t :t))
(core:compile '(define-core-if :t :t))
(core:compile '(define-core-if :t (mu:fx-add 0 1) (mu:fx-add 0 0)))
(core:compile '(define-core-if (core:null ()) (mu:fx-add 0 1) (mu:fx-add 0 0)))
(core:compile '(define-core-if (core:not (core:null :t)) (mu:fx-add 0 1) (mu:fx-add 0 0)))
(core:compile '((define-core-lambda (fn) (core:apply (define-core-lambda (fn) (mu:eq :func (mu:type-of fn))) `(,fn))) mu:eq))
