(core:typep '(1 2) :cons)
(core:typep 1 :fixnum)
(core:typep (mu:make-st :struct ()) :struct)
(core:typep "abc" :vector)
(core:typep #(:t 1 2 3) :vector)
(core:typep mu:std-in :stream)
(core:typep #\a :char)
(core:typep 1.024e23 :float)
(core:typep (mu:make-mp ()) :map)
(core:typep :foo :keyword)
(core:typep 'foo :symbol)
(core:typep () :null)
(core:typep () 'symbol)
(core:typep () '(satisfies core:null))
(core:typep 1 '(satisfies core:fixnump))
(core:typep 1024e23 '(satisfies core:floatp))
(core:typep '(1 2 3) '(satisfies core:consp))
(core:typep #(:t 1 2 3) '(satisfies core:vectorp))
(core:typep #\a '(satisfies core:charp))
(core:typep () '(not symbol))
(core:typep () '(and))
(core:typep () '(and (satisfies core:null)))
(core:typep () '(and :null (satisfies core:null)))
(core:typep () '(or))
(core:typep () '(or (satisfies core:null)))
(core:typep () '(or :null (satisfies core:null)))
